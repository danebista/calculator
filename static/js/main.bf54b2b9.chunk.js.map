{"version":3,"sources":["App.js","components/resultbar.component.jsx","components/button.component.jsx","components/buttonlist.components.jsx","reportWebVitals.js","index.js"],"names":["App","handleClick","button","target","value","backspace","reset","calculateResult","setState","result","state","finalResult","eval","e","length","splicedString","substring","console","log","this","className","finalValue","Component","ResultBar","Button","Fragment","name","onClick","ButtonList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf54b2b9.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport {ButtonList} from './components/buttonlist.components'\nimport {ResultBar} from './components/resultbar.component';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = { result:\"\"}\n  }\n\n  handleClick = (button)=> {\n    \n    if (button.target.value === \"CE\"){\n      this.backspace();\n    }\n    \n    else if (button.target.value === \"C\"){\n      this.reset();\n    }\n\n    else if (button.target.value === \"=\"){\n      this.calculateResult();\n    }\n    else {\n      this.setState({result: this.state.result + button.target.value})\n    }\n  }\n\n  calculateResult = () => {\n\n    try {\n      const finalResult = (eval(this.state.result)) + '';\n      this.setState({result: finalResult});\n    }catch(e){\n      this.setState({result: ' Error. Press C to clear screen'})\n    }\n  }\n\n  backspace = () => {\n    \n    if (this.state.result.length > 0){\n        const splicedString = this.state.result.substring(0, this.state.result.length - 1);\n        this.setState({result: splicedString});\n    }\n  }\n\n\n  reset = () => {\n    \n    if (this.state.result.length >0){\n      this.setState({result: \"\"})\n    }\n  }\n\n  render(){\n    console.log(this.state.result)\n    return (\n      <div className=\"App\">\n        <ResultBar finalValue={this.state.result} />\n        <ButtonList handleClick={this.handleClick}></ButtonList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport './resultbar.css'\r\n\r\nexport const ResultBar =({finalValue})=>{\r\n    return (<div className='result'>\r\n           <p> {finalValue} </p>\r\n          </div>)\r\n    }\r\n","import React from 'react';\r\nimport './button.css';\r\n\r\nexport const Button=({handleClick})=>{\r\n    return (\r\n        <React.Fragment>\r\n            <button name=\"(\" value=\"(\" onClick = {handleClick}> ( </button>\r\n            <button name=\"CE\" value=\"CE\" onClick = {handleClick}> CE </button>\r\n            <button name=\")\" value=\")\" onClick = {handleClick}> ) </button>\r\n            <button name=\"C\" value=\"C\" onClick = {handleClick}> C </button>\r\n\r\n\r\n            <button name=\"1\" value=\"1\" onClick = {handleClick}> 1 </button>\r\n            <button name=\"2\" value=\"2\" onClick = {handleClick}> 2 </button>\r\n            <button name=\"3\" value=\"3\" onClick = {handleClick}> 3 </button>\r\n            <button name=\"+\" value=\"+\" onClick = {handleClick}> + </button>\r\n\r\n\r\n            <button name=\"4\" value=\"4\" onClick = {handleClick}> 4 </button>\r\n            <button name=\"5\" value=\"5\" onClick = {handleClick}> 5 </button>\r\n            <button name=\"6\" value=\"6\" onClick = {handleClick}> 6 </button>\r\n            <button name=\"-\" value=\"-\" onClick = {handleClick}> - </button>\r\n\r\n            <button name=\"7\" value=\"7\" onClick = {handleClick}> 7 </button>\r\n            <button name=\"8\" value=\"8\" onClick = {handleClick}> 8 </button>\r\n            <button name=\"9\" value=\"9\" onClick = {handleClick}> 9 </button>\r\n            <button name=\"*\" value=\"*\" onClick = {handleClick}> x </button>\r\n\r\n\r\n            <button name=\".\" value=\".\" onClick = {handleClick}> . </button>\r\n            <button name=\"0\" value=\"0\" onClick = {handleClick}> 0 </button>\r\n            <button name=\"=\" value=\"=\" onClick = {handleClick}> = </button>\r\n            <button name=\"/\" value=\"/\" onClick = {handleClick}> รท </button>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\r\nimport './buttonlist.css';\r\nimport {Button} from './button.component'\r\n\r\nexport const ButtonList=({handleClick})=>{\r\n    return (<div className='button-holder'>\r\n                <Button handleClick={handleClick}></Button>\r\n           </div>);\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}